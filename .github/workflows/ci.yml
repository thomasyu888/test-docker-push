name: ci

on:
  push:
    branches:
      - main
    tags:
      - '*.*.*'

jobs:

  docker:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Prepare
      id: prep
      run: |
        DOCKER_IMAGE=docker.synapse.org/syn4990358/test-me
        VERSION=noop
        PUSH=false
        if [ "${{ github.event_name }}" = "schedule" ]; then
          VERSION=nightly
          PUSH=true
        elif [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        elif [[ $GITHUB_REF == refs/heads/* ]]; then
          VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
            VERSION=edge
            PUSH=true
          fi
        elif [[ $GITHUB_REF == refs/pull/* ]]; then
          VERSION=pr-${{ github.event.number }}
        fi
        TAGS="${DOCKER_IMAGE}:${VERSION}"
        if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
          MINOR=${VERSION%.*}
          MAJOR=${MINOR%.*}
          TAGS="$TAGS,${DOCKER_IMAGE}:${MINOR},${DOCKER_IMAGE}:${MAJOR},${DOCKER_IMAGE}:latest"
          PUSH=true
        # elif [ "${{ github.event_name }}" = "push" ]; then
        #   TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
        fi
        echo ::set-output name=version::${VERSION}
        echo ::set-output name=tags::${TAGS}
        echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
        echo ::set-output name=push::${PUSH}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Login to Synapse Container Registry
      uses: docker/login-action@v1 
      with:
        registry: docker.synapse.org
        username: ${{ secrets.SYNAPSE_USERNAME }}
        password: ${{ secrets.SYNAPSE_PASSWORD }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: Dockerfile
        platforms: linux/amd64
        push: ${{ steps.prep.outputs.push }}
        tags: ${{ steps.prep.outputs.tags }}
        labels: |
          org.opencontainers.image.created=${{ steps.prep.outputs.created }}
          org.opencontainers.image.source=${{ github.repositoryUrl }}
          org.opencontainers.image.version=${{ steps.prep.outputs.version }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.licenses=${{ github.event.repository.license.name }}
    - shell: bash
      run: |
        echo ${{ steps.prep.outputs.tags }} > dockertag.txt
    - name: Upload docker result
      uses: actions/upload-artifact@v2
      with:
        name: dockertag
        path: dockertag.txt

  nlpsandbox:
    name: Submit submission to synapse
    needs: [docker]
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    # log into Synapse
    - name: synapse login
      uses: thomasyu888/synapse-login-action@0.1
      with:
        username: ${{ secrets.SYNAPSE_USERNAME }}
        apikey: ${{ secrets.SYNAPSE_APIKEY }}
    # Read dockertag value from docker run
    # (Env variables aren't shared between runs)
    - name: Download docker tag
      uses: actions/download-artifact@v2
      with:
        name: dockertag
    - shell: bash
      run: |
        value=`cat dockertag.txt`
        echo "DOCKERTAG=$value" >> $GITHUB_ENV
    # search for docker repo in Synaspe project
    - name: synapse search docker
      uses: ./.github/actions/synapse-search-docker
      with:
        parentid: syn4990358
        docker_repo: ${{ env.DOCKERTAG }}
      id: synsearchdocker
    # Store README + Dockerfile
    - name: synapse store readme
      uses: ./.github/actions/synapse-gh-to-wiki
      with:
        synid: ${{ steps.synsearchdocker.outputs.synid }}
    - name: synapse submit
      uses: ./.github/actions/synapse-submit
      with:
        synid: ${{ steps.synsearchdocker.outputs.synid }}
        # Address queue: 9614658
        # Address test queue: 9614684
        # Date queue: 9614652
        # Date test queue: 9614654
        # Person queue: 9614657
        # Person test queue: 9614685
        # Test Queue: 9614111
        evaluationid: 9614111
        dockertag: ${{ steps.synsearchdocker.outputs.tag }}
      id: synsubmit
    - shell: bash
      run: |
        echo ${{ steps.synsubmit.outputs.submissionid }} > submission.txt
    - name: Upload docker result
      uses: actions/upload-artifact@v2
      with:
        name: submission
        path: submission.txt